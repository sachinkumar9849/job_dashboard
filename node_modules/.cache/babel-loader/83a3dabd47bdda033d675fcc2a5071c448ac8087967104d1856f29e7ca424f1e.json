{"ast":null,"code":"import { showLoading, hideLoading, getAllJobs } from '../allJobs/allJobsSlice';\nimport customFetch, { checkForUnauthorizedResponse } from '../../utils/axios';\nimport { clearValues } from './jobSlice';\nexport const createJobThunk = async (job, thunkAPI) => {\n  try {\n    const resp = await customFetch.post('/jobs', job);\n    thunkAPI.dispatch(clearValues());\n    return resp.data.msg;\n  } catch (error) {\n    return checkForUnauthorizedResponse(error, thunkAPI);\n  }\n};\nexport const deleteJobThunk = async (jobId, thunkAPI) => {\n  thunkAPI.dispatch(showLoading());\n  try {\n    const resp = await customFetch.delete(`/jobs/${jobId}`);\n    thunkAPI.dispatch(getAllJobs());\n    return resp.data.msg;\n  } catch (error) {\n    thunkAPI.dispatch(hideLoading());\n    return checkForUnauthorizedResponse(error, thunkAPI);\n  }\n};\nexport const editJobThunk = async (_ref, thunkAPI) => {\n  let {\n    jobId,\n    job\n  } = _ref;\n  try {\n    const resp = await customFetch.patch(`/jobs/${jobId}`, job);\n    thunkAPI.dispatch(clearValues());\n    return resp.data;\n  } catch (error) {\n    return checkForUnauthorizedResponse(error, thunkAPI);\n  }\n};","map":{"version":3,"names":["showLoading","hideLoading","getAllJobs","customFetch","checkForUnauthorizedResponse","clearValues","createJobThunk","job","thunkAPI","resp","post","dispatch","data","msg","error","deleteJobThunk","jobId","delete","editJobThunk","patch"],"sources":["C:/Reactjs/job-app/src/features/job/jobThunk.js"],"sourcesContent":["import { showLoading, hideLoading, getAllJobs } from '../allJobs/allJobsSlice';\r\nimport customFetch, { checkForUnauthorizedResponse } from '../../utils/axios';\r\nimport { clearValues } from './jobSlice';\r\n\r\nexport const createJobThunk = async (job, thunkAPI) => {\r\n  try {\r\n    const resp = await customFetch.post('/jobs', job);\r\n    thunkAPI.dispatch(clearValues());\r\n    return resp.data.msg;\r\n  } catch (error) {\r\n    return checkForUnauthorizedResponse(error, thunkAPI);\r\n  }\r\n};\r\nexport const deleteJobThunk = async (jobId, thunkAPI) => {\r\n  thunkAPI.dispatch(showLoading());\r\n  try {\r\n    const resp = await customFetch.delete(`/jobs/${jobId}`);\r\n    thunkAPI.dispatch(getAllJobs());\r\n    return resp.data.msg;\r\n  } catch (error) {\r\n    thunkAPI.dispatch(hideLoading());\r\n    return checkForUnauthorizedResponse(error, thunkAPI);\r\n  }\r\n};\r\nexport const editJobThunk = async ({ jobId, job }, thunkAPI) => {\r\n  try {\r\n    const resp = await customFetch.patch(`/jobs/${jobId}`, job);\r\n    thunkAPI.dispatch(clearValues());\r\n    return resp.data;\r\n  } catch (error) {\r\n    return checkForUnauthorizedResponse(error, thunkAPI);\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,WAAW,EAAEC,UAAU,QAAQ,yBAAyB;AAC9E,OAAOC,WAAW,IAAIC,4BAA4B,QAAQ,mBAAmB;AAC7E,SAASC,WAAW,QAAQ,YAAY;AAExC,OAAO,MAAMC,cAAc,GAAG,OAAOC,GAAG,EAAEC,QAAQ,KAAK;EACrD,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMN,WAAW,CAACO,IAAI,CAAC,OAAO,EAAEH,GAAG,CAAC;IACjDC,QAAQ,CAACG,QAAQ,CAACN,WAAW,EAAE,CAAC;IAChC,OAAOI,IAAI,CAACG,IAAI,CAACC,GAAG;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOV,4BAA4B,CAACU,KAAK,EAAEN,QAAQ,CAAC;EACtD;AACF,CAAC;AACD,OAAO,MAAMO,cAAc,GAAG,OAAOC,KAAK,EAAER,QAAQ,KAAK;EACvDA,QAAQ,CAACG,QAAQ,CAACX,WAAW,EAAE,CAAC;EAChC,IAAI;IACF,MAAMS,IAAI,GAAG,MAAMN,WAAW,CAACc,MAAM,CAAE,SAAQD,KAAM,EAAC,CAAC;IACvDR,QAAQ,CAACG,QAAQ,CAACT,UAAU,EAAE,CAAC;IAC/B,OAAOO,IAAI,CAACG,IAAI,CAACC,GAAG;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAACG,QAAQ,CAACV,WAAW,EAAE,CAAC;IAChC,OAAOG,4BAA4B,CAACU,KAAK,EAAEN,QAAQ,CAAC;EACtD;AACF,CAAC;AACD,OAAO,MAAMU,YAAY,GAAG,aAAuBV,QAAQ,KAAK;EAAA,IAA7B;IAAEQ,KAAK;IAAET;EAAI,CAAC;EAC/C,IAAI;IACF,MAAME,IAAI,GAAG,MAAMN,WAAW,CAACgB,KAAK,CAAE,SAAQH,KAAM,EAAC,EAAET,GAAG,CAAC;IAC3DC,QAAQ,CAACG,QAAQ,CAACN,WAAW,EAAE,CAAC;IAChC,OAAOI,IAAI,CAACG,IAAI;EAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOV,4BAA4B,CAACU,KAAK,EAAEN,QAAQ,CAAC;EACtD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}