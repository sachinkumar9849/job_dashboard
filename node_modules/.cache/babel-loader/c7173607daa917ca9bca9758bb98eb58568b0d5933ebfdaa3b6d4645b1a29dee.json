{"ast":null,"code":"import customFetch, { checkForUnauthorizedResponse } from '../../utils/axios';\nimport { clearAllJobsState } from '../allJobs/allJobsSlice';\nimport { clearValues } from '../job/jobSlice';\nimport { logoutUser } from './userSlice';\nexport const registerUserThunk = async (url, user, thunkAPI) => {\n  try {\n    const resp = await customFetch.post(url, user);\n    return resp.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data.msg);\n  }\n};\nexport const loginUserThunk = async (url, user, thunkAPI) => {\n  try {\n    const resp = await customFetch.post(url, user);\n    return resp.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data.msg);\n  }\n};\nexport const updateUserThunk = async (url, user, thunkAPI) => {\n  try {\n    const resp = await customFetch.patch(url, user);\n    return resp.data;\n  } catch (error) {\n    return checkForUnauthorizedResponse(error, thunkAPI);\n  }\n};\nexport const clearStoreThunk = async (message, thunkAPI) => {\n  try {\n    thunkAPI.dispatch(logoutUser(message));\n    thunkAPI.dispatch(clearAllJobsState());\n    thunkAPI.dispatch(clearValues());\n    return Promise.resolve();\n  } catch (error) {\n    return Promise.reject();\n  }\n};","map":{"version":3,"names":["customFetch","checkForUnauthorizedResponse","clearAllJobsState","clearValues","logoutUser","registerUserThunk","url","user","thunkAPI","resp","post","data","error","rejectWithValue","response","msg","loginUserThunk","updateUserThunk","patch","clearStoreThunk","message","dispatch","Promise","resolve","reject"],"sources":["C:/Reactjs/redux-toolkit-jobster/src/features/user/userThunk.js"],"sourcesContent":["import customFetch, { checkForUnauthorizedResponse } from '../../utils/axios';\r\nimport { clearAllJobsState } from '../allJobs/allJobsSlice';\r\nimport { clearValues } from '../job/jobSlice';\r\nimport { logoutUser } from './userSlice';\r\nexport const registerUserThunk = async (url, user, thunkAPI) => {\r\n  try {\r\n    const resp = await customFetch.post(url, user);\r\n    return resp.data;\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error.response.data.msg);\r\n  }\r\n};\r\n\r\nexport const loginUserThunk = async (url, user, thunkAPI) => {\r\n  try {\r\n    const resp = await customFetch.post(url, user);\r\n    return resp.data;\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error.response.data.msg);\r\n  }\r\n};\r\n\r\nexport const updateUserThunk = async (url, user, thunkAPI) => {\r\n  try {\r\n    const resp = await customFetch.patch(url, user);\r\n    return resp.data;\r\n  } catch (error) {\r\n    return checkForUnauthorizedResponse(error, thunkAPI);\r\n  }\r\n};\r\n\r\nexport const clearStoreThunk = async (message, thunkAPI) => {\r\n  try {\r\n    thunkAPI.dispatch(logoutUser(message));\r\n    thunkAPI.dispatch(clearAllJobsState());\r\n    thunkAPI.dispatch(clearValues());\r\n    return Promise.resolve();\r\n  } catch (error) {\r\n    return Promise.reject();\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,WAAW,IAAIC,4BAA4B,QAAQ,mBAAmB;AAC7E,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,UAAU,QAAQ,aAAa;AACxC,OAAO,MAAMC,iBAAiB,GAAG,OAAOC,GAAG,EAAEC,IAAI,EAAEC,QAAQ,KAAK;EAC9D,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMT,WAAW,CAACU,IAAI,CAACJ,GAAG,EAAEC,IAAI,CAAC;IAC9C,OAAOE,IAAI,CAACE,IAAI;EAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOJ,QAAQ,CAACK,eAAe,CAACD,KAAK,CAACE,QAAQ,CAACH,IAAI,CAACI,GAAG,CAAC;EAC1D;AACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,OAAOV,GAAG,EAAEC,IAAI,EAAEC,QAAQ,KAAK;EAC3D,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMT,WAAW,CAACU,IAAI,CAACJ,GAAG,EAAEC,IAAI,CAAC;IAC9C,OAAOE,IAAI,CAACE,IAAI;EAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOJ,QAAQ,CAACK,eAAe,CAACD,KAAK,CAACE,QAAQ,CAACH,IAAI,CAACI,GAAG,CAAC;EAC1D;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,OAAOX,GAAG,EAAEC,IAAI,EAAEC,QAAQ,KAAK;EAC5D,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMT,WAAW,CAACkB,KAAK,CAACZ,GAAG,EAAEC,IAAI,CAAC;IAC/C,OAAOE,IAAI,CAACE,IAAI;EAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOX,4BAA4B,CAACW,KAAK,EAAEJ,QAAQ,CAAC;EACtD;AACF,CAAC;AAED,OAAO,MAAMW,eAAe,GAAG,OAAOC,OAAO,EAAEZ,QAAQ,KAAK;EAC1D,IAAI;IACFA,QAAQ,CAACa,QAAQ,CAACjB,UAAU,CAACgB,OAAO,CAAC,CAAC;IACtCZ,QAAQ,CAACa,QAAQ,CAACnB,iBAAiB,EAAE,CAAC;IACtCM,QAAQ,CAACa,QAAQ,CAAClB,WAAW,EAAE,CAAC;IAChC,OAAOmB,OAAO,CAACC,OAAO,EAAE;EAC1B,CAAC,CAAC,OAAOX,KAAK,EAAE;IACd,OAAOU,OAAO,CAACE,MAAM,EAAE;EACzB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}