{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport { getUserFromLocalStorage } from '../../utils/localStorage';\nimport { createJobThunk, deleteJobThunk, editJobThunk } from './jobThunk';\nconst initialState = {\n  isLoading: false,\n  position: '',\n  company: '',\n  jobLocation: '',\n  jobTypeOptions: ['full-time', 'part-time', 'remote', 'internship'],\n  jobType: 'full-time',\n  statusOptions: ['interview', 'declined', 'pending'],\n  status: 'pending',\n  isEditing: false,\n  editJobId: ''\n};\nexport const createJob = createAsyncThunk('job/createJob', createJobThunk);\nexport const deleteJob = createAsyncThunk('job/deleteJob', deleteJobThunk);\nexport const editJob = createAsyncThunk('job/editJob', editJobThunk);\nconst jobSlice = createSlice({\n  name: 'job',\n  initialState,\n  reducers: {\n    handleChange: (state, _ref) => {\n      let {\n        payload: {\n          name,\n          value\n        }\n      } = _ref;\n      state[name] = value;\n    },\n    clearValues: () => {\n      var _getUserFromLocalStor;\n      return {\n        ...initialState,\n        jobLocation: ((_getUserFromLocalStor = getUserFromLocalStorage()) === null || _getUserFromLocalStor === void 0 ? void 0 : _getUserFromLocalStor.location) || ''\n      };\n    },\n    setEditJob: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return {\n        ...state,\n        isEditing: true,\n        ...payload\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(createJob.pending, state => {\n      state.isLoading = true;\n    }).addCase(createJob.fulfilled, state => {\n      state.isLoading = false;\n      toast.success('Job Created');\n    }).addCase(createJob.rejected, (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.isLoading = false;\n      toast.error(payload);\n    }).addCase(deleteJob.fulfilled, (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      toast.success(payload);\n    }).addCase(deleteJob.rejected, (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      toast.error(payload);\n    }).addCase(editJob.pending, state => {\n      state.isLoading = true;\n    }).addCase(editJob.fulfilled, state => {\n      state.isLoading = false;\n      toast.success('Job Modified...');\n    }).addCase(editJob.rejected, (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      state.isLoading = false;\n      toast.error(payload);\n    });\n  }\n});\nexport const {\n  handleChange,\n  clearValues,\n  setEditJob\n} = jobSlice.actions;\nexport default jobSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","toast","getUserFromLocalStorage","createJobThunk","deleteJobThunk","editJobThunk","initialState","isLoading","position","company","jobLocation","jobTypeOptions","jobType","statusOptions","status","isEditing","editJobId","createJob","deleteJob","editJob","jobSlice","name","reducers","handleChange","state","payload","value","clearValues","location","setEditJob","extraReducers","builder","addCase","pending","fulfilled","success","rejected","error","actions","reducer"],"sources":["C:/Reactjs/redux-toolkit-jobster/src/features/job/jobSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\nimport { getUserFromLocalStorage } from '../../utils/localStorage';\r\nimport { createJobThunk, deleteJobThunk, editJobThunk } from './jobThunk';\r\nconst initialState = {\r\n  isLoading: false,\r\n  position: '',\r\n  company: '',\r\n  jobLocation: '',\r\n  jobTypeOptions: ['full-time', 'part-time', 'remote', 'internship'],\r\n  jobType: 'full-time',\r\n  statusOptions: ['interview', 'declined', 'pending'],\r\n  status: 'pending',\r\n  isEditing: false,\r\n  editJobId: '',\r\n};\r\n\r\nexport const createJob = createAsyncThunk('job/createJob', createJobThunk);\r\n\r\nexport const deleteJob = createAsyncThunk('job/deleteJob', deleteJobThunk);\r\n\r\nexport const editJob = createAsyncThunk('job/editJob', editJobThunk);\r\n\r\nconst jobSlice = createSlice({\r\n  name: 'job',\r\n  initialState,\r\n  reducers: {\r\n    handleChange: (state, { payload: { name, value } }) => {\r\n      state[name] = value;\r\n    },\r\n    clearValues: () => {\r\n      return {\r\n        ...initialState,\r\n        jobLocation: getUserFromLocalStorage()?.location || '',\r\n      };\r\n    },\r\n    setEditJob: (state, { payload }) => {\r\n      return { ...state, isEditing: true, ...payload };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(createJob.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createJob.fulfilled, (state) => {\r\n        state.isLoading = false;\r\n        toast.success('Job Created');\r\n      })\r\n      .addCase(createJob.rejected, (state, { payload }) => {\r\n        state.isLoading = false;\r\n        toast.error(payload);\r\n      })\r\n      .addCase(deleteJob.fulfilled, (state, { payload }) => {\r\n        toast.success(payload);\r\n      })\r\n      .addCase(deleteJob.rejected, (state, { payload }) => {\r\n        toast.error(payload);\r\n      })\r\n      .addCase(editJob.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(editJob.fulfilled, (state) => {\r\n        state.isLoading = false;\r\n        toast.success('Job Modified...');\r\n      })\r\n      .addCase(editJob.rejected, (state, { payload }) => {\r\n        state.isLoading = false;\r\n        toast.error(payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport const { handleChange, clearValues, setEditJob } = jobSlice.actions;\r\n\r\nexport default jobSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}