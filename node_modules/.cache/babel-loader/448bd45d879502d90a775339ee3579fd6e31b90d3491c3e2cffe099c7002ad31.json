{"ast":null,"code":"import _objectSpread from\"C:/Reactjs/redux-toolkit-jobster/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import{toast}from'react-toastify';import{getUserFromLocalStorage}from'../../utils/localStorage';import{createJobThunk,deleteJobThunk,editJobThunk}from'./jobThunk';var initialState={isLoading:false,position:'',company:'',jobLocation:'',jobTypeOptions:['full-time','part-time','remote','internship'],jobType:'full-time',statusOptions:['interview','declined','pending'],status:'pending',isEditing:false,editJobId:''};export var createJob=createAsyncThunk('job/createJob',createJobThunk);export var deleteJob=createAsyncThunk('job/deleteJob',deleteJobThunk);export var editJob=createAsyncThunk('job/editJob',editJobThunk);var jobSlice=createSlice({name:'job',initialState:initialState,reducers:{handleChange:function handleChange(state,_ref){var _ref$payload=_ref.payload,name=_ref$payload.name,value=_ref$payload.value;state[name]=value;},clearValues:function clearValues(){var _getUserFromLocalStor;return _objectSpread(_objectSpread({},initialState),{},{jobLocation:((_getUserFromLocalStor=getUserFromLocalStorage())===null||_getUserFromLocalStor===void 0?void 0:_getUserFromLocalStor.location)||''});},setEditJob:function setEditJob(state,_ref2){var payload=_ref2.payload;return _objectSpread(_objectSpread({},state),{},{isEditing:true},payload);}},extraReducers:function extraReducers(builder){builder.addCase(createJob.pending,function(state){state.isLoading=true;}).addCase(createJob.fulfilled,function(state){state.isLoading=false;toast.success('Job Created');}).addCase(createJob.rejected,function(state,_ref3){var payload=_ref3.payload;state.isLoading=false;toast.error(payload);}).addCase(deleteJob.fulfilled,function(state,_ref4){var payload=_ref4.payload;toast.success(payload);}).addCase(deleteJob.rejected,function(state,_ref5){var payload=_ref5.payload;toast.error(payload);}).addCase(editJob.pending,function(state){state.isLoading=true;}).addCase(editJob.fulfilled,function(state){state.isLoading=false;toast.success('Job Modified...');}).addCase(editJob.rejected,function(state,_ref6){var payload=_ref6.payload;state.isLoading=false;toast.error(payload);});}});var _jobSlice$actions=jobSlice.actions,handleChange=_jobSlice$actions.handleChange,clearValues=_jobSlice$actions.clearValues,setEditJob=_jobSlice$actions.setEditJob;export{handleChange,clearValues,setEditJob};export default jobSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","toast","getUserFromLocalStorage","createJobThunk","deleteJobThunk","editJobThunk","initialState","isLoading","position","company","jobLocation","jobTypeOptions","jobType","statusOptions","status","isEditing","editJobId","createJob","deleteJob","editJob","jobSlice","name","reducers","handleChange","state","payload","value","clearValues","location","setEditJob","extraReducers","builder","addCase","pending","fulfilled","success","rejected","error","actions","reducer"],"sources":["C:/Reactjs/redux-toolkit-jobster/src/features/job/jobSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\nimport { getUserFromLocalStorage } from '../../utils/localStorage';\r\nimport { createJobThunk, deleteJobThunk, editJobThunk } from './jobThunk';\r\nconst initialState = {\r\n  isLoading: false,\r\n  position: '',\r\n  company: '',\r\n  jobLocation: '',\r\n  jobTypeOptions: ['full-time', 'part-time', 'remote', 'internship'],\r\n  jobType: 'full-time',\r\n  statusOptions: ['interview', 'declined', 'pending'],\r\n  status: 'pending',\r\n  isEditing: false,\r\n  editJobId: '',\r\n};\r\n\r\nexport const createJob = createAsyncThunk('job/createJob', createJobThunk);\r\n\r\nexport const deleteJob = createAsyncThunk('job/deleteJob', deleteJobThunk);\r\n\r\nexport const editJob = createAsyncThunk('job/editJob', editJobThunk);\r\n\r\nconst jobSlice = createSlice({\r\n  name: 'job',\r\n  initialState,\r\n  reducers: {\r\n    handleChange: (state, { payload: { name, value } }) => {\r\n      state[name] = value;\r\n    },\r\n    clearValues: () => {\r\n      return {\r\n        ...initialState,\r\n        jobLocation: getUserFromLocalStorage()?.location || '',\r\n      };\r\n    },\r\n    setEditJob: (state, { payload }) => {\r\n      return { ...state, isEditing: true, ...payload };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(createJob.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createJob.fulfilled, (state) => {\r\n        state.isLoading = false;\r\n        toast.success('Job Created');\r\n      })\r\n      .addCase(createJob.rejected, (state, { payload }) => {\r\n        state.isLoading = false;\r\n        toast.error(payload);\r\n      })\r\n      .addCase(deleteJob.fulfilled, (state, { payload }) => {\r\n        toast.success(payload);\r\n      })\r\n      .addCase(deleteJob.rejected, (state, { payload }) => {\r\n        toast.error(payload);\r\n      })\r\n      .addCase(editJob.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(editJob.fulfilled, (state) => {\r\n        state.isLoading = false;\r\n        toast.success('Job Modified...');\r\n      })\r\n      .addCase(editJob.rejected, (state, { payload }) => {\r\n        state.isLoading = false;\r\n        toast.error(payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport const { handleChange, clearValues, setEditJob } = jobSlice.actions;\r\n\r\nexport default jobSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}